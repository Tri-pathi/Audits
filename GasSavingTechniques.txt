These are some assmembly based gas saving ideas that i use to optimise contracts 



1. Use assmembly to emit events
2. Packed state variables to use fewer storage slots
3. Create immutable variable to avoid reduntant external calls wherever possible

4. if similar external function are called back to back then use assmembly to perform
   efficient calls by reusing funtion signature and param those are identical

   We can also reuse same memory space for both function call(`scratch space`+ `free memory pointer`)
   , which can potentially allow us to avoid memory expansion constant

5. use assmembly to extract calldata values more efficiently

6. use assmembly to validate msg.sender
   we can also potentially save gas on the unhappy path by using `scratch space`
   to store the error selector, potentially avoiding memory expansion costs


7. Use assmembly to efficiently read and write to Packed storage slots

8.

